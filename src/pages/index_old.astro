---
import EqualAreaSlide from "../components/home_slideshow_components/equalAreaSlide.astro";
import Layout from "../components/layout_components/layout.astro";
import AnnotatedLink from "../components/prose_components/annotatedLink.astro";
import { LINKS } from "../lib/linkHelper";
import { getPhotoByName as p } from "../lib/photoHelper";
---

<Layout>
    <main class="sm:flex justify-center items-center p-4">
        <EqualAreaSlide
            show={true}
            photoName="2024-05-25-la-corbiere-st-brelade-jersey"
            shadow="4px 4px 0 rgba(10, 114, 123, 0.09)"
            fromHref={LINKS.palimpsest}
            fromText="Palimpsest"
        />
        <EqualAreaSlide
            photoName="2021-01-14-north-atlantic-pennance-point"
            border="4px solid #e2e8f0"
            fromHref={LINKS.horizons}
            fromText="Horizons"
        />
        <figure
            class="my-64 sm:my-0 sm:hidden flex justify-center"
            data-swap-child
            data-caption="Bear, witness, Belsize Park. 2024."
            data-from-text="Palimpsest"
            data-from-href={LINKS.palimpsest}
        >
            <div
                class="flex justify-center items-center w-[568px] gap-3 sm:gap-4 max-w-[calc(100vw_-_2rem)]"
            >
                <img
                    data-swap-button
                    draggable="false"
                    src={p("2024-09-03-shed-train-window-weymouth").paths
                        .medium}
                    alt={p("2024-09-03-shed-train-window-weymouth")
                        .joinedCaption}
                    class="sm:cursor-crosshair w-[calc(50%-0.5rem)]"
                />
                <img
                    data-swap-button
                    src={p("2024-05-17-bear-witness-belsize-park").paths.medium}
                    alt={p("2024-05-17-bear-witness-belsize-park")
                        .joinedCaption}
                    class="sm:cursor-crosshair border-[3px] border-[#0A0907] w-[calc(50%-0.5rem)]"
                />
            </div>
            <!-- <figcaption class="font-semibold text-sm sm:hidden">
                Bear, witness, Belsize Park. 2024.
            </figcaption> -->
        </figure>
        <EqualAreaSlide
            photoName="2019-08-31-cycling-gudmundsen-drive-door-county"
            shadow="4px 4px 0px rgba(0, 0, 0, 0.8)"
            fromHref={LINKS.heartland}
            fromText="Heartland"
        />
        <EqualAreaSlide
            photoName="2024-04-26-forest-library-isle-of-wight"
            border="3px solid #C8CDB9"
            fromHref={LINKS.palimpsest}
            fromText="Palimpsest"
        />
        <EqualAreaSlide
            photoName="2021-10-30-hell-awaits-falmouth"
            border="4px solid rgba(1, 113, 123, 0.09)"
            fromHref={LINKS.lingermyth}
            fromText="Lingermyth"
        />
    </main>
    <span slot="bottomleft" class="hidden sm:inline" data-caption-container>
        {p("2024-05-25-la-corbiere-st-brelade-jersey").joinedCaption}
    </span>
    <span slot="bottomright" class="hidden sm:inline">
        <span>From</span>
        <AnnotatedLink
            data-from-link-container
            type="circle"
            staticUnderline={true}
        >
            Palimpsest
        </AnnotatedLink>
    </span>
    <script>
        function initHomeSlides() {
            const swapChildren = Array.from(
                document.querySelectorAll("[data-swap-child]")
            );

            const captionContainer = document.querySelector(
                "[data-caption-container]"
            ) as HTMLElement;
            const fromLinkContainer = document.querySelector(
                "[data-from-link-container]"
            ) as HTMLAnchorElement;

            function nextSlide(forwards = true) {
                const current = swapChildren.find(
                    (e) => !e.classList.contains("sm:hidden")
                );

                let next = (
                    forwards
                        ? current?.nextElementSibling
                        : current?.previousElementSibling
                ) as HTMLElement;
                if (!next) {
                    next = swapChildren.at(forwards ? 0 : -1) as HTMLElement;
                }

                swapChildren.forEach((e) => e.classList.add("sm:hidden"));
                next.classList.remove("sm:hidden");

                captionContainer.innerHTML = next.dataset.caption;
                fromLinkContainer.innerHTML = next.dataset.fromText;
                fromLinkContainer.href = next.dataset.fromHref;
            }

            document
                .querySelectorAll("[data-swap-button]")
                .forEach((e) => e.addEventListener("click", () => nextSlide()));

            document.addEventListener("keydown", (e) => {
                if (e.key === "ArrowLeft") {
                    nextSlide(false);
                } else if (e.key === "ArrowRight") {
                    nextSlide();
                }
            });
        }

        initHomeSlides();
        document.addEventListener("astro:after-swap", initHomeSlides);
    </script>
</Layout>
