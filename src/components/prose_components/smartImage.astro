---
import path from "path";
import { resolveImage, type Image } from "../../lib/photoHelper";

interface Props extends Image {
    class?: string;
    figStyle?: string;
    caption?: "left" | "right" | "center" | "none";
    lazy?: boolean;
}

const { class: classes, figStyle, caption = "center", lazy = true, ...image } = Astro.props;


const resolved = await resolveImage(image);

let captionClass: string;
switch (caption) {
    case "none":
        captionClass = "hidden";
        break;
    case "left":
        captionClass = "text-left";
        break;
    case "right":
        captionClass = "text-right";
        break;
    case "center":
        captionClass = "text-center";
        break;
}
---

{
    resolved && (
        <figure class={classes} style={figStyle}>
            <img
                src={resolved.src}
                alt={resolved.alt}
                class:list={[
                    "select-none",
                    { crisp: path.parse(resolved.src).ext !== ".webp" },
                ]}
                style={resolved.style}
                draggable="false"
                loading={lazy ? "lazy" : "eager"}
            />
            <figcaption
                class:list={[
                    "text-center font-md italic text-xs text-gray-600 mt-2",
                    captionClass,
                ]}
            >
                {resolved.alt}
            </figcaption>
        </figure>
    )
}
