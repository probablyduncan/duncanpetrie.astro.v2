---
import { LINKS } from "../../lib/linkHelper";
import SmartLink from "../prose_components/smartLink.astro";

interface Props {
    righttext?: string;
    rightlink?: string;
}

const { righttext = "INDEX", rightlink = LINKS.index } = Astro.props;

---

<nav
    data-bottom-bar
    class:list={[
        "fixed sm:bottom-4 bottom-0 z-10 px-4 sm:px-0",
        "sm:w-auto w-full bg-white sm:rounded-full",
        "text-md font-semibold",
        "flex justify-center",
        "data-[hidden]:translate-y-20 transition-transform",
    ]}
>
    <div
        class:list={[
            "flex justify-between sm:w-[31rem] w-[28rem] sm:max-w-full max-w-full",
            "sm:px-6 px-1 py-4 sm:rounded-full border-t-[3px] sm:border-[3px] border-black bg-white dark:border-white dark:bg-black",
        ]}
    >
        <slot name="left">
            <span>
                <SmartLink
                    href={LINKS.home}
                    title="https://duncanpetrie.com"
                    class="hover:decoration-dotted hover:underline"
                >DUNCANPETRIE.COM</SmartLink>
                &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;
            </span>
        </slot>
        <slot name="right">
            <SmartLink
                href={rightlink}
                title="All pages."
                class="hover:decoration-dotted hover:underline"
            >{righttext}</SmartLink>
        </slot>
    </div>
</nav>
<script>
    function bottomBarInit() {
        const bottomBars = document.querySelectorAll("[data-bottom-bar]");

        let showing = window.scrollY < 100;
        let prev = window.scrollY;

        // min delta for change, and distance from bottom of page that bar appears again
        const threshold = 20;

        document.addEventListener("scroll", () => {
            const curr = window.scrollY;
            const delta = curr - prev;
            prev = curr;

            if (delta > threshold && showing) {
                showing = false;
                bottomBars.forEach((e) => {
                    (e as HTMLElement).dataset.hidden = "true";
                });
            } else if (
                (delta < -threshold ||
                    curr >=
                        document.body.scrollHeight -
                            window.innerHeight -
                            threshold ||
                    curr <= threshold) &&
                !showing
            ) {
                showing = true;
                bottomBars.forEach((e) => {
                    delete (e as HTMLElement).dataset.hidden;
                });
            }
        });
    }

    document.addEventListener("DOMContentLoaded", bottomBarInit);
    document.addEventListener("astro:after-swap", bottomBarInit);
</script>
