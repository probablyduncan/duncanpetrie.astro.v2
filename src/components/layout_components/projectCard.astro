---
import type { PhotoName } from "../../data/photoTypes.generated";
import { type Image } from "../../lib/photoHelper";
import SmartLink from "../prose_components/smartLink.astro";
import SmartImage from "../prose_components/smartImage.astro";
import { toSeveral, type SingleOrSeveral } from "../../lib/singleOrSeveral";

interface Props {
    href?: string;
    titleLigatures?: boolean;
    titleIconSpace?: boolean;
    largeImage?: boolean;
    images?: SingleOrSeveral<Image>;
    photos?: SingleOrSeveral<PhotoName>;
    srcs?: SingleOrSeveral<string>;
}

const {
    href,
    titleLigatures = false,
    titleIconSpace = true,
    largeImage = false,
    photos = [],
    srcs = [],
    images = [],
} = Astro.props;

const allImages: Image[] = toSeveral(images)
    .concat(toSeveral(photos).map((photoName) => ({ photoName })))
    .concat(toSeveral(srcs).map((src) => ({ src })));

const widestRatio = allImages.reduce(
    (prev, { ratio }) => Math.max(prev, ratio),
    0
);
---

<section class="">
    <div class="swiper">
        <div class="swiper-wrapper">
            {
                allImages.map((image) => (
                    <div class="swiper-slide">
                        <div class="flex justify-center px-4">
                            <div class={largeImage ? "max-w-xl" : "max-w-md"}>
                                <SmartImage
                                    {...image}
                                    style={`width: ${(100 * image.ratio) / widestRatio}%;`}
                                    caption="none"
                                />
                            </div>
                        </div>
                    </div>
                ))
            }
        </div>
    </div>
    <div class="flex flex-col items-center mt-2 px-4">
        <div class="max-w-md">
            <div class="font-semibold text-right text-sm">
                <slot name="underimage" />
            </div>
            <h1
                class:list={[
                    "font-serif text-5xl mt-8 pl-1",
                    { ligatures: titleLigatures },
                ]}
            >
                {
                    href ? (
                        <SmartLink href={href}>
                            <slot name="title" />
                        </SmartLink>
                    ) : (
                        <slot name="title" />
                    )
                }<sup>{titleIconSpace ? " " : ""}<slot name="icon" /></sup>
            </h1>
            <div
                class="relative [&_>*]:pt-4 [&_>p:first-of-type]:arrow-indent hyphens-auto sm:hyphens-none pl-1 pr-4"
            >
                <slot />
            </div>
            <div class="mt-40 flex justify-between border-b-2 border-black">
                <slot name="bottomleft">
                    <span class="italic">
                        <span class="font-serif text-lg"
                            ><slot name="icon" /></span
                        >
                        <slot name="bottomline" />
                    </span>
                </slot>
                <slot name="bottomright">
                    <span>-&gt;</span>
                </slot>
            </div>
        </div>
    </div>
</section>
<script>
    import Swiper from "swiper";
    import "swiper/css";

    document.addEventListener("DOMContentLoaded", function () {
        const swiper = new Swiper(".swiper");
    });
</script>
